version: '3.8'

services:
  match_redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app_network

  match_mysql:
    image: mysql:8.0
    container_name: match_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "1234"
      MYSQL_DATABASE: "match_db"
    ports:
      - "3307:3306" # 외부에서는 3307 포트로 접속
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - match_mysql_data:/var/lib/mysql
    networks:
      - app_network

  chat_mysql:
    image: mysql:8.0
    container_name: chat_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "1234"
      MYSQL_DATABASE: "chat_db"
    ports:
      - "3308:3306"  # 외부에서는 3308 포트로 접속
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - chat_mysql_data:/var/lib/mysql
    networks:
      - app_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - app_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  match_mysql_data:
  chat_mysql_data:
